struct Node
{
    bool endmark = false;
    Node* next[52] = {NULL};
};

class Trie
{
public:

    int getId(char ch)
    {
        int val = ch - 'A';
        if(ch >= 'a')
        {
            val = val - 6;
        }
        return val;
    }

    Node* root;
    Trie()
    {
        root = new Node();
    }

    void insert(string word)
    {
        Node* curr = root;
        for(int i = 0 ; i < word.size() ; i++)
        {
            int id = getId(word[i]);
            if(curr -> next[id] == NULL)
            {
                curr -> next[id] = new Node();
            }
            curr = curr -> next[id];
        }
        curr -> endmark = true;
    }

    bool search(string word)
    {
        Node* curr = root;
        for(int i = 0 ; i < word.size() ; i++)
        {
            int id = getId(word[i]);
            if(curr -> next[id] == NULL)
            {
                return false;
            }
            curr = curr -> next[id];
        }
        return curr -> endmark;
    }

    bool startsWith(string prefix)
    {
        Node* curr = root;
        for(int i = 0; i < prefix.size() ; i++)
        {
            int id = getId(prefix[i]);
            if(curr -> next[id] == NULL)
            {
                return false;
            }
            curr = curr -> next[id];
        }
        return true;
    }
