ListNode *getIntersectionNode(ListNode *headA, ListNode *headB)
{
    int count1=0, count2=0;
    ListNode * cur1=headA;
    ListNode * cur2=headB;
    while(cur1!=NULL)
    {
        count1++;
        cur1=cur1->next;
    }
    while(cur2!=NULL)
    {
        count2++;
        cur2=cur2->next;
    }
    if(count1<count2)
    {
        int rem=count2-count1;
        for(int i=0; i<rem; i++)
        {
            headB=headB->next;
        }
        if(headA==headB)
        {
            return headA;
        }
        while(headA)
        {
            if(headA->next==headB->next)
            {
                return headA->next;
            }
            headA=headA->next;
            headB=headB->next;
        }
    }
    else if(count1>count2)
    {
        int rem=count1-count2;
        for(int i=0; i<rem; i++)
        {
            headA=headA->next;
        }
        if(headA==headB)
        {
            return headA;
        }
        while(headA)
        {
            if(headA->next==headB->next)
            {
                return headA->next;
            }
            headA=headA->next;
            headB=headB->next;
        }

    }
    else
    {
        if (headA==headB)
        {
            return headA;
        }
        while(headA)
        {
            if(headA->next==headB->next)
            {
                return headA->next;
            }
            headA=headA->next;
            headB=headB->next;

        }
    }
    return NULL;

}
