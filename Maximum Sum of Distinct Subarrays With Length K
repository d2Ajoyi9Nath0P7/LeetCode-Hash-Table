long long maximumSubarraySum(vector<int>& nums, int k)
{
    map<int,int>mp;
    long long sum = 0;
    for(int i = 0 ; i < k-1; i++)
    {
        mp[nums[i]]++;
        sum += nums[i];
    }
    long long max_sum = 0;
    for(int j = k - 1; j < nums.size() ; j++)
    {
        mp[nums[j]]++;
        sum += nums[j];
        if(mp.size() == k)
        {
            max_sum = max(max_sum,sum);
        }
        if(mp[nums[j-k+1]] == 1)
        {
            mp.erase(nums[j-k+1]);
        }
        else
        {
            mp[nums[j-k+1]]--;
        }
        sum -= nums[j-k+1];
    }
    return max_sum;
}
